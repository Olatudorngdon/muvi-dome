{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Rating=_ref=>{let{movieId}=_ref;const[rating,setRating]=useState(0);const handleRate=value=>{setRating(value);// TODO: Send rating to backend if needed\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:\"Rate this movie: \"}),[1,2,3,4,5].map(num=>/*#__PURE__*/_jsx(\"button\",{style:{color:rating>=num?'gold':'gray'},onClick:()=>handleRate(num),children:\"\\u2605\"},num))]});};export default Rating;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Rating","_ref","movieId","rating","setRating","handleRate","value","children","map","num","style","color","onClick"],"sources":["C:/Users/wagwan/movie-recommendation-app/App-Overview/frontend/src/components/Rating.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Rating = ({ movieId }) => {\n  const [rating, setRating] = useState(0);\n\n  const handleRate = (value) => {\n    setRating(value);\n    // TODO: Send rating to backend if needed\n  };\n\n  return (\n    <div>\n      <span>Rate this movie: </span>\n      {[1,2,3,4,5].map(num => (\n        <button\n          key={num}\n          style={{ color: rating >= num ? 'gold' : 'gray' }}\n          onClick={() => handleRate(num)}\n        >â˜…</button>\n      ))}\n    </div>\n  );\n};\n\nexport default Rating;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACzB,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CAEvC,KAAM,CAAAU,UAAU,CAAIC,KAAK,EAAK,CAC5BF,SAAS,CAACE,KAAK,CAAC,CAChB;AACF,CAAC,CAED,mBACEP,KAAA,QAAAQ,QAAA,eACEV,IAAA,SAAAU,QAAA,CAAM,mBAAiB,CAAM,CAAC,CAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAACC,GAAG,eAClBZ,IAAA,WAEEa,KAAK,CAAE,CAAEC,KAAK,CAAER,MAAM,EAAIM,GAAG,CAAG,MAAM,CAAG,MAAO,CAAE,CAClDG,OAAO,CAAEA,CAAA,GAAMP,UAAU,CAACI,GAAG,CAAE,CAAAF,QAAA,CAChC,QAAC,EAHKE,GAGG,CACX,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}